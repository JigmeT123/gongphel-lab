"""
Autogenerated input type of CreateDashboard
"""
input CreateDashboardInput {
  attributes: DashboardCreate!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Dashboard {
  amount: Int!
  cidNo: String!
  debtorName: String!
  endDate: ISO8601Date!
  id: ID!
  licenseNo: String!
  name: String
  numberPlate: String
  startDate: ISO8601Date!
  status: Boolean!
  statusCheck: Boolean!
}

input DashboardCreate {
  amount: Int!
  cidNo: String!
  debtorName: String!
  licenseNo: String!
  name: String
  numberPlate: String
}

"""
The connection type for Dashboard.
"""
type DashboardsConnection {
  """
  A list of edges.
  """
  edges: [DashboardsEdge]

  """
  A list of nodes.
  """
  nodes: [Dashboard]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type DashboardsEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Dashboard
}

"""
An ISO 8601-encoded date
"""
scalar ISO8601Date

type Mutation {
  createDashboard(
    """
    Parameters for CreateDashboard
    """
    input: CreateDashboardInput!
  ): Dashboard
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  dashboard(id: ID!): Dashboard!
  dashboards(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Supports searches on user cid_no, license_no, name, number_plate
    """
    query: String
    skip: Int
    status: Boolean
  ): DashboardsConnection!
}
